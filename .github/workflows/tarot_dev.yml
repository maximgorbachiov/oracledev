name: Manual Deploy to Oracle VM

on:
  workflow_dispatch: # run manually from GitHub Actions tab

env:
  appName: 'tarotapp.service'
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    # 1. Checkout repo
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Setup .NET 8
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Debug SSH values
      run: |
        echo "Host: ${{ secrets.TAROTSERVICE_APP_VM_HOST }}"
        echo "User: ${{ secrets.TAROTSERVICE_APP_VM_USER }}"

    # 3. Publish app for Linux
    - name: Publish app
      run: |
        cd TarotService/TarotService
        dotnet publish -c Release -r linux-x64 --self-contained false -o ../../publish

    # 4. Setup SSH key
    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.TAROTSERVICE_APP_VM_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.TAROTSERVICE_APP_VM_HOST }} >> ~/.ssh/known_hosts

    - name: SSH Hash code for private key
      run: ssh-keygen -lf ~/.ssh/id_rsa -E sha256

    # 5. Test SSH connection
    - name: Test SSH connection
      run: |
        ssh -vvv -i ~/.ssh/id_rsa \
        ${{ secrets.TAROTSERVICE_APP_VM_USER }}@${{ secrets.TAROTSERVICE_APP_VM_HOST }} \
        "echo Connected successfully"

    # 6. Copy files using native scp
    - name: Copy files to Oracle VM
      run: |
        scp -r publish/* \
          ${{ secrets.TAROTSERVICE_APP_VM_USER }}@${{ secrets.TAROTSERVICE_APP_VM_HOST }}:${{ secrets.TAROTSERVICE_APP_VM_PATH }}

    # 7. Restart nginx (or your app service) via ssh
    - name: Restart service on VM
      run: |
        ssh ${{ secrets.TAROTSERVICE_APP_VM_USER }}@${{ secrets.TAROTSERVICE_APP_VM_HOST }} \
          "sudo systemctl restart nginx && sudo systemctl restart ${{ env.appName }} && sudo systemctl status ${{ env.appName }} --no-pager"
